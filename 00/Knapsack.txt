Function knapSack(W, weights, values):
    n ← number of items
    Create 2D array dp of size (n+1) × (W+1), initialized to 0

    For i from 1 to n:
        For w from 0 to W:
            dp[i][w] ← dp[i - 1][w]  // Exclude current item by default
            If weights[i - 1] ≤ w:
                dp[i][w] ← max(dp[i][w], values[i - 1] + dp[i - 1][w - weights[i - 1]])
            EndIf
        EndFor
    EndFor

    Return dp[n][W]
EndFunction

Main:
    values ← [60, 100, 120]
    weights ← [10, 20, 30]
    W ← 50

    result ← knapSack(W, weights, values)
    Print result

    Return 0
EndMain
